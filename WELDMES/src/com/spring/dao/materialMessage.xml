<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.dao.MaterialMessageMapper">

	<resultMap type="com.spring.model.MaterialMessage" id="materialMap">
		<id property="materialId" column="material_id"/>
		<result property="code" column="code"/>
		<result property="name" column="name"/>
		<result property="materialType" column="material_type"/>
		<result property="location" column="location"/>
		<result property="inventory" column="inventory"/>
		<result property="inventoryChangeType" column="inventory_change_type"/>
		<result property="changeAddress" column="change_address"/>
		<result property="changeNumber" column="change_number"/>
		<result property="changeOrder" column="change_order"/>
		<result property="putGetStorageType" column="put_get_storage_type"/>
		<result property="changeTime" column="change_time"/>
		<result property="unit" column="unit"/>
		<result property="univalence" column="univalence"/>
		<result property="totalPrices" column="total_prices"/>
		<result property="parentId" column="parent_id"/>
		<result property="supplierId" column="supplier_id"/>
		<result property="creator" column="creator"/>
		<result property="createTime" column="create_time"/>
		<result property="mender" column="mender"/>
		<result property="supplierName" column="supplierName"/>
		<result property="materialTypeName" column="materialTypeName"/>
		<result property="putGetStorageTypeName" column="putGetStorageTypeName"/>
	</resultMap>

	<resultMap type="com.spring.model.MaterialMessage" id="supplierMap">
		<id property="supplierMessageId" column="supplier_id"/>
		<result property="supplierCode" column="code"/>
		<result property="supplierName" column="name"/>
		<result property="address" column="address"/>
		<result property="phone" column="phone"/>
		<result property="contacts" column="contacts"/>
		<result property="remark" column="remark"/>
		<result property="supplierCreator" column="creator"/>
		<result property="supplierCreateTime" column="create_time"/>
	</resultMap>

	<sql id="Material">
		material_id,code,name,material_type,location,inventory,inventory_change_type,change_address,
		change_number,change_order,put_get_storage_type,change_time,unit,univalence,total_prices,
		parent_id,supplier_id,creator,create_time,mender
	</sql>
	
	<sql id="material_message">
		mm.material_id,mm.code,mm.name,mm.material_type,mm.location,mm.inventory,mm.inventory_change_type,mm.change_address,
		mm.change_number,mm.change_order,mm.put_get_storage_type,mm.change_time,mm.unit,mm.univalence,mm.total_prices,
		mm.parent_id,mm.supplier_id,mm.creator,mm.create_time,mm.mender
	</sql>

	<select id="selectMaterialList" resultMap="materialMap"  parameterType="java.lang.String">
		SELECT <include refid="material_message"></include>,td.fvaluename materialTypeName,tds.fvaluename putGetStorageTypeName 
		FROM tb_material_message mm
		LEFT JOIN tb_dictionary td ON mm.material_type = td.fvalue
		LEFT JOIN tb_dictionary tds ON mm.put_get_storage_type = tds.fvalue
		WHERE 1 = 1
		<if test="parent != null and parent != ''">
			and parent_id = #{parent}
		</if>
		<if test="parent == null or parent == ''">
			and parent_id != 0
		</if>
		
	</select>
	
	<!-- 查询父级物料列表 -->
	<select id="selectMaterialTree" resultMap="materialMap">
		SELECT <include refid="Material"></include> FROM tb_material_message WHERE parent_id = 0
	</select>

	<!-- 根据主键id查询物料信息  -->
	<select id="findMaterialById" resultMap="materialMap" parameterType="java.math.BigInteger">
		SELECT <include refid="material_message"></include>,sm.name supplierName,td.fvaluename materialTypeName,tds.fvaluename putGetStorageTypeName  
		FROM tb_material_message mm
		LEFT JOIN tb_supplier_message sm ON mm.supplier_id = sm.supplier_id
		LEFT JOIN tb_dictionary td ON mm.material_type = td.fvalue
		LEFT JOIN tb_dictionary tds ON mm.put_get_storage_type = tds.fvalue
		WHERE mm.material_id = #{materialId}
	</select>
	
	<delete id="deleteMaterialById" parameterType="java.math.BigInteger" flushCache="true">
		DELETE FROM tb_material_message WHERE material_id = #{materialId}
	</delete>

	<update id="updateMaterialById" parameterType="com.spring.model.MaterialMessage" flushCache="true">
		UPDATE tb_material_message SET name = #{name},material_type = #{materialType},location = #{location},inventory = #{inventory},
		inventory_change_type = #{inventoryChangeType},change_address = #{changeAddress},change_number = #{changeNumber},
		change_order = #{changeOrder},put_get_storage_type = #{putGetStorageType},change_time = #{changeTime},unit = #{unit},
		univalence = #{univalence},total_prices = #{totalPrices},parent_id = #{parentId},supplier_id = #{supplierId},mender=#{mender}
		WHERE material_id = #{materialId}
	</update>
	
	<insert id="addMaterialMessage" parameterType="com.spring.model.MaterialMessage" flushCache="true">
		INSERT INTO tb_material_message(code,name,material_type,location,inventory,inventory_change_type,change_address,change_number,
		change_order,put_get_storage_type,change_time,unit,univalence,total_prices,parent_id,supplier_id,creator,create_time) 
		VALUES(
			#{code},#{name},#{materialType},#{location},#{inventory},#{inventoryChangeType},#{changeAddress},#{changeNumber},
			#{changeOrder},#{putGetStorageType},#{changeTime},#{unit},#{univalence},#{totalPrices},#{parentId},#{supplierId},
			#{creator},#{createTime}
		)
	</insert>

</mapper>